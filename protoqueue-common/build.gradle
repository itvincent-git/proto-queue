apply plugin: 'java-library'
//apply plugin: 'maven'
apply plugin: 'kotlin'
group = 'com.github.itvincent-git'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

//apply plugin: 'com.novoda.bintray-release'//添加
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'net.researchgate.release'
release {
    failOnUnversionedFiles = false
    failOnUpdateNeeded = false
    buildTasks = ['publish'] ////定义发布时该执行哪个task
}
//publish {
//    userOrg = "$user_org"//bintray.com用户名
//    groupId = "$group_id"//jcenter上的路径
//    artifactId = 'protoqueue-common'//项目名称
//    publishVersion = "$release_version"//版本号
//    desc = 'common dependency'//描述，不重要
//    website = "$url"//网站
//}

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getSnapshotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
            : "https://oss.sonatype.org/content/repositories/snapshots/"
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava ///若包含图片等资源改为allSource
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId "$group_id"
            artifactId 'protoqueue-common'
            version "$release_version"
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

publishing {
    repositories {
        maven {
            credentials {
                username = getRepositoryUsername()
                password = getRepositoryPassword()
            }

            if(isReleaseBuild()) {
                url getReleaseRepositoryUrl()
            } else {
                url getSnapshotRepositoryUrl()
            }
        }
    }
}